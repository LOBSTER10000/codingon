.container {
    width: 800px;
    height: 800px;
    background: #333;
    margin : 0 auto;
    /* 가운데에 배치 */
    display: flex;
    /* 부모 요소에 flex를 선언하면 item(자식)요소들이 가로 방향으로 배치가 됨 */

    /* 
       flexbox 기본 용어

       -주축 (main axis) : 아이템의 배치 방향을 의미 
       -교차축 (cross axis) : 주축의 수직축
    */


    /* flex direction: flex 방향을 설정 (주축의 방향을 설정)
         -row : 수평 정렬 (좌-> 우)
         -row-reverse : 수평정렬 ( 우-> 좌)
         -column : 수직정렬 (상-> 하)
         -column : 수직정렬(하->상)
     
       row일 때 
       flex-direction : row;
       flex-direction : row-reverse;

       column 때
       flex-direction : column;
       flex-direction : column-reverse;
    */

    /* 
      justify-content : 주축의 아이템을 어떻게 배치할 것인가 정하는 것

      -flex-direction이 수평 정렬이면 주축은 가로(row)
      -flex-direction이 수직 정렬이면 주축은 세로(column)

      justify-content : flex-start; -> 아이템을 start 기준으로 나열
      justify-content : flex-end; -> end 지점을 기준으로 나열
      justify-content : space-between; -> 처음과 마지막 아이템을 양 끝으로 붙이고, 나머지를 공평하게 나눔
      justify-content : space-around; -> 아이템들의 모든 여백을 공평하게 같게함
      justify-content : space-evenly; -> start부터 아이템간의 간격, end까지의 모든 간격이 일정
      justify-content : center;
    */

    /* 
      align-items: 교차축에 대해서 아이템을 어떻게 배치할 것인가를 정하는 것
        -flex-direction이 수평 정렬; 교차축 = column (세로);
        -flex-direction이 수직 정렬; 교차축 = row (가로);
      align-items: stretch; -> width,height를 설정하지 않을 경우 div만큼 맞춰줌
      align-items: flex-start; -> 교차축에 대해 시작점으로 정렬
      align-items: flex-end; -> 교차축에 대해 끝점으로 정렬
      align-items: center; -> 정렬에 따른 중앙 정렬
      align-items: baseline; -> 글자 크기에 따라 라인을 맞춤
    */

    /* flex-wrap: 줄바꿈 (개행) 처리 
      -> 컨테이너(부모)가 한 줄에 다 아이템을 수용하지 못할 경우, 줄바꿈 관련 설정
       flex-wrap : nowrap; -> 줄바꿈 안함(디폴트)
       flex-wrap : wrap; -> 줄바꿈 
       flex-wrap : wrap-reverse; -> 아이템을 역순으로 줄바꿈
    */

    /* align-content : 여러행에 대한 정렬 
        (조건) flex-wrap : wrap 상태에서 아이템이 두 줄 이상일 때 수직축 방량 설정함 
    
        align-content: stretch;  -> 
        align-content: flex-start; 
        align-content: flex-end; 
        align-content: center; 
        align-content: space-between; 
        align-content: space-around; 
        align-content: space-evenly; */
    
}

.items {
    width: 100px;
    height: 100px;
    text-align : center;
    font-size: 30px;
    font-weight: 700;
    line-height: 100px;
}

.item1 {
 background-color: aqua;
}

.item2 {
 background-color: blue;
}
.item3 {
 background-color: brown;
}
.item4 {
 background-color: chartreuse;
}
.item5 {
 background-color: coral;
}

.outer {
    width: 800px;
    height: 800px;
    background: gray;
    margin: 0 auto;
}

.inner {
    width: 400px;
    height: 400px;
    background: black;
}

/* 정가운데 배치 */
/* position, transform 방법 */
.outer1 {
    position: relative;
}


.inner1 {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    /* transform을 사용할 경우 inner에 속하는 크기만큼 이동함 */
}


/* flex 방법 */
.outer2 {
    display: flex;
    justify-content: center;
    align-items: center;
}
